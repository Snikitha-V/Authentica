#!/bin/bash

# AUTHENTICA - Quick Command Reference
# Copy-paste commands for quick setup and execution

echo "╔════════════════════════════════════════════════════════════╗"
echo "║      AUTHENTICA - Quick Command Reference                  ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 🚀 QUICKEST START (ONE COMMAND)"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "macOS / Linux:"
echo "  chmod +x start.sh && ./start.sh"
echo ""
echo "Windows:"
echo "  start.bat"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 📦 MANUAL SETUP"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "1. Create conda environment:"
echo "  conda create -n authentica-cpu python=3.10 -y"
echo ""
echo "2. Activate environment:"
echo "  conda activate authentica-cpu"
echo ""
echo "3. Install dependencies:"
echo "  pip install -r requirements.txt"
echo "  pip install Flask Flask-CORS"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 🔧 RUN SERVICES"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "Terminal 1 - Backend API:"
echo "  conda activate authentica-cpu"
echo "  python app.py"
echo ""
echo "Terminal 2 - Frontend:"
echo "  python3 -m http.server 8000"
echo ""
echo "Then visit: http://localhost:8000"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 🧪 TEST THE SYSTEM"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "Health check:"
echo "  curl http://localhost:5000/health"
echo ""
echo "Verify signature:"
echo "  curl -X POST http://localhost:5000/verify \\"
echo "    -F 'real_sig=@reference.png' \\"
echo "    -F 'suspected_sig=@suspected.png'"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 🎓 TRAINING & EVALUATION"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "Train model:"
echo "  python train.py --epochs 50 --lr 0.0001 --batch-size 32"
echo ""
echo "Evaluate model:"
echo "  python evaluate.py"
echo ""
echo "Evaluate with specific checkpoint:"
echo "  python evaluate.py --checkpoint path/to/checkpoint.pth"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 🐛 TROUBLESHOOTING"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "Kill process on port 5000:"
echo "  lsof -i :5000 | grep -v COMMAND | awk '{print \$2}' | xargs kill -9"
echo ""
echo "Clear browser cache (macOS):"
echo "  Cmd+Shift+R"
echo ""
echo "Clear browser cache (Windows/Linux):"
echo "  Ctrl+Shift+R"
echo ""
echo "View backend logs:"
echo "  tail -f /tmp/authentica_backend.log"
echo ""
echo "Reinstall dependencies:"
echo "  pip install --upgrade -r requirements.txt"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 📊 URLS"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "Frontend:  http://localhost:8000"
echo "Backend:   http://localhost:5000"
echo "Health:    http://localhost:5000/health"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " 📖 DOCUMENTATION"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "Complete README:"
echo "  COMPLETE_README.md"
echo ""
echo "Setup & API Docs:"
echo "  FRONTEND_SETUP.md"
echo ""
echo "Integration Guide:"
echo "  INTEGRATION_GUIDE.md"
echo ""
echo "Usage Tutorial:"
echo "  DEMO_GUIDE.md"
echo ""
echo "Implementation Summary:"
echo "  IMPLEMENTATION_SUMMARY.md"
echo ""

echo "═══════════════════════════════════════════════════════════════"
echo " ✨ YOU'RE READY!"
echo "═══════════════════════════════════════════════════════════════"
echo ""
echo "Next steps:"
echo "1. Run: ./start.sh (or start.bat on Windows)"
echo "2. Open: http://localhost:8000 in browser"
echo "3. Upload signature images"
echo "4. Click 'ANALYZE SIGNATURES'"
echo "5. See the magic! ✨"
echo ""
echo "═══════════════════════════════════════════════════════════════"
